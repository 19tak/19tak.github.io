I"e
<h2 id="문제">문제</h2>
<p>제출형식</p>

<ul>
  <li>클래스 다이어그램</li>
</ul>

<p>​</p>

<h2 id="답안">답안</h2>
<p><img src="https://user-images.githubusercontent.com/84369912/126754680-ca0c738f-13fb-44eb-a2b2-40c9506ac6a5.png" alt="image" />
<img src="https://user-images.githubusercontent.com/84369912/126754716-26d1d39d-00a1-47fa-b865-1e76416fb203.png" alt="image" /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>#super class &lt;-&gt; sub class(Top --&gt; Down)
import random
import turtle
from abc import *

class Duck:
    DUCK_SIZE=30
    def __init__(self):
        self.x = random.randint(-300,300)
        self.y = random.randint(-300,300)
        self._turtle = turtle
    
    @abstractmethod
    def display(self):
        pass
        
    def sound(self):
        self._turtle.penup()
        self._turtle.goto(self.x + 30, self.y + 50)
        self._turtle.pendown()
        self._turtle.write("quack")  #print text
        
    def move(self):
        self._turtle.penup()
        self._turtle.goto(self.x - 50, self.y + 50)
        self._turtle.pendown()
        self._turtle.write("Move")  #print text
        
    def screen_reset(self):
        self._turtle.reset()
        
class MallardDuck(Duck):
    def __init__(self):
        super(MallardDuck,self).__init__()
        self.color='blue'
        
    def display(self):
        self._turtle.penup()
        self._turtle.goto(self.x, self.y)
        self._turtle.pendown()
        self._turtle.color(self.color)
        self._turtle.begin_fill()
        self._turtle.circle(Duck.DUCK_SIZE)
        self._turtle.end_fill()
        
class RedDuck(Duck):
    def __init__(self):
        super(RedDuck,self).__init__()
        self.color='red'
        
    def display(self):
        self._turtle.penup()
        self._turtle.goto(self.x, self.y)
        self._turtle.pendown()
        self._turtle.color(self.color)
        self._turtle.begin_fill()
        self._turtle.circle(Duck.DUCK_SIZE)
        self._turtle.end_fill()        
        
class DuckManager:
    def __init__(self):
        self.__duck_list=[]
        
    def makeDucks(self,*ducks):
        for duck in ducks:
            self.__duck_list.append(duck)
            
    def dispDucks(self):
        for duck in self.__duck_list:
            duck.display()
            duck.sound()
            duck.move()
            
    def resetDucks(self):
        self.__duck_list[0].screen_reset()

DM=DuckManager()

for i in range(0,5):
    DM.makeDucks(MallardDuck(),RedDuck())
DM.resetDucks()    
DM.dispDucks()
</code></pre></div></div>
:ET